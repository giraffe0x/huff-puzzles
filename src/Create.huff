
/**
 *  CREATE HUFF EXERCISE
 *
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

// Init code
// PUSH1 0x80     ->  0x6080
// PUSH1 0x40     ->  0x60806040               allocate free memory pointer
// PUSH1 0x0a     ->  0x60806040600a           length of runtime code
// DUP1           ->  0x60806040600a80          copy length
// PUSH1 0x0F     ->  0x60806040600a80600F      0F(15 bytes) = offset of runtime code
// PUSH1 0x00     ->  0x60806040600a80600F60    copy runtime code to memory
// CODECOPY       ->  0x60806040600a80600F600039
// PUSH1 0x00     ->  0x60806040600a80600F6000396000
// RETURN         ->  0x60806040600a80600F6000396000f3

// Another way to write Init code
// PUSH1 0x0a       ->  0x600a // 10 = length of runtime code
// DUP1             ->  0x600a80 // duplicate length
// PUSH1 0x09       ->  0x600a806009 // 9 = length of init code (how does it know in advance?)
// RETURNDATASIZE   ->  0x600a8060093d // push0
// CODECOPY         ->  0x600a8060093d39 // copy runtime code to memory at 0 (destOffset, offset, size) = (0, 9, 10)
// RETURNDATASIZE   ->  0x600a8060093d393d // push0
// RETURN           ->  0x600a8060093d393df3 // return (returns runtime code?)

// Runtime code
// PUSH3 0x0caffe  ->  0x620caffe               [0caffe] // extra 0 to make 3 bytes
// RETURNDATASIZE  ->  0x620caffe3d             [0, 0caffe]
// MSTORE          ->  0x620caffe3d52           []
// PUSH1 0x20      ->  0x620caffe3d526020       [0x20]
// RETURNDATASIZE  ->  0x620caffe3d5260203d     [0, 0x20]
// RETURN          ->  0x620caffe3d5260203df3   []


// creation code: 0x600a8060093d393df3620caffe3d5260203df3
// alt: 0x60806040600a80600F6000396000f3620caffe3d5260203df3 // 25 bytes

 #define function makeContract() payable returns(address)

 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(makeContract) eq makeLabel jumpi
    0x00 0x00 revert

    makeLabel:
      // 0x600a8060093d393df3620caffe3d5260203df3    // [creationCode]
      0x60806040600a80600F6000396000f3620caffe3d5260203df3
      0x00 mstore
      // 0x13 // [19] creation code is 19 bytes long
      // 0x0d // [13, 19]  offset at 13, + 19 = 32 bytes
      0x37
      0x07
      0x00 // [0, 13, 19] 0 for gas? why?
      create // [address]
      // revert if address is 0
      dup1 iszero failed jumpi
      0x00 mstore
      0x20 0x00 return

      failed:
        0x00 0x00 revert
 }
